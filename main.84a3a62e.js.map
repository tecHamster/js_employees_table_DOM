{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tHead","tBody","tBodies","sortState","activeRow","minNameLength","minAgeValue","maxAgeValue","offices","textErrorName","textErrorPosition","textErrorAge","textErrorOffice","join","textErrorSalary","pushNotification","field","description","type","notification","createElement","classList","add","setAttribute","h2","p","textContent","append","body","setTimeout","remove","pushErrorNameNotification","pushErrorPositionNotification","pushErrorAgeNotification","pushErrorOfficeNotification","pushErrorSalaryNotification","handleTextInput","input","words","trim","split","map","word","result","slice","toUpperCase","checkIsNameValid","nameStr","length","checkIsPositionValid","position","checkIsAgeValid","age","checkIsOfficeValid","office","includes","checkIsSalaryValid","salary","getNumFromString","str","replaceAll","makeSalaryString","toString","i","createForm","form","innerHTML","addEventListener","e","preventDefault","nameInput","positionInput","officeInput","ageInput","salaryInput","nameValue","value","positionValue","officeValue","ageValue","salaryValue","tr","handleSortEvent","target","tagName","sortValue","rows","querySelectorAll","reverse","index","parentElement","children","indexOf","sortedRows","sort","row1","row2","row1Value","row2Value","localeCompare","toggleActiveRow","row","closest","toggle","changeContentInCell","cell","handleChangeEvent","changeEvent","key","cellIndex","initialValue","getAttribute","newValue","hasErrors","focus"],"mappings":"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","file":"main.84a3a62e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tHead = table.tHead;\nconst tBody = table.tBodies[0];\nlet sortState = '';\nlet activeRow = '';\nconst minNameLength = 4;\nconst minAgeValue = 18;\nconst maxAgeValue = 90;\nconst offices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nconst textErrorName = 'Name can\\'t be less than 4 symbols';\nconst textErrorPosition = 'Position should be more than 1 symbol';\nconst textErrorAge = 'Age should be less than 18 and more than 90';\nconst textErrorOffice = `Office must be one of the followed values:\n  ${offices.join(' ')}`;\nconst textErrorSalary = 'Salary should be more than 10000';\n\nfunction pushNotification(field, description, type) {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.setAttribute('data-qa', 'notification');\n\n  const h2 = document.createElement('h2');\n  const p = document.createElement('p');\n\n  h2.classList.add('title');\n  h2.textContent = `Error in the \"${field}\" field`;\n  p.textContent = description;\n\n  notification.append(h2, p);\n  document.body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n};\n\nfunction pushErrorNameNotification() {\n  pushNotification('NAME', textErrorName, 'error');\n}\n\nfunction pushErrorPositionNotification() {\n  pushNotification('POSITION', textErrorPosition, 'error');\n}\n\nfunction pushErrorAgeNotification() {\n  pushNotification('AGE', textErrorAge, 'error');\n}\n\nfunction pushErrorOfficeNotification() {\n  pushNotification('OFFICE', textErrorOffice, 'error');\n}\n\nfunction pushErrorSalaryNotification() {\n  pushNotification('SALARY', textErrorSalary, 'error');\n}\n\nfunction handleTextInput(input) {\n  const words = input.trim().split(' ').map(word => {\n    const result = word.trim();\n\n    return result.slice(0, 1).toUpperCase() + result.slice(1);\n  });\n\n  return words.join(' ');\n}\n\nfunction checkIsNameValid(nameStr) {\n  return nameStr.trim().length >= minNameLength;\n}\n\nfunction checkIsPositionValid(position) {\n  return position.trim().length >= 2;\n}\n\nfunction checkIsAgeValid(age) {\n  return age >= minAgeValue && age <= maxAgeValue;\n}\n\nfunction checkIsOfficeValid(office) {\n  return offices.includes(office);\n}\n\nfunction checkIsSalaryValid(salary) {\n  return salary > 10000;\n}\n\nfunction getNumFromString(str) {\n  return +str.replaceAll(/\\D/gmi, '');\n}\n\nfunction makeSalaryString(salary) {\n  const str = salary.toString();\n  let result = '';\n\n  for (let i = 0; i < str.length; i++) {\n    if (i % 3 === 0 && i !== str.length - 1 && i !== 0) {\n      result = ',' + result;\n    }\n\n    result = str[str.length - 1 - i] + result;\n  }\n\n  return '$' + result;\n}\n\nfunction createForm() {\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  form.innerHTML = `\n    <label>Name: \n      <input data-qa=\"name\" name=\"name\" type=\"text\" required>\n    </label>\n\n    <label>Position:\n      <input data-qa=\"position\" name=\"position\" type=\"text\" required>\n    </label>\n\n    <label>Office: \n      <select data-qa=\"office\" name=\"office\" required>\n        ${offices.map(office => `<option value=\"${office}\">${office}</option>`)}\n      </select>\n    </label>\n\n    <label>Age:\n      <input data-qa=\"age\" name=\"age\" type=\"number\" required>\n    </label>\n\n    <label>Salary:\n      <input data-qa=\"salary\" name=\"salary\" type=\"number\" required>\n    </label>\n    \n    <button type=\"submit\">Save to table</button>`;\n\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const nameInput = form.querySelector('[name=\"name\"]');\n    const positionInput = form.querySelector('[name=\"position\"]');\n    const officeInput = form.querySelector('[name=\"office\"]');\n    const ageInput = form.querySelector('[name=\"age\"]');\n    const salaryInput = form.querySelector('[name=\"salary\"]');\n\n    const nameValue = handleTextInput(nameInput.value);\n    const positionValue = handleTextInput(positionInput.value);\n    const officeValue = officeInput.value;\n    const ageValue = +ageInput.value;\n    const salaryValue = +salaryInput.value;\n\n    if (!checkIsNameValid(nameValue)) {\n      pushErrorNameNotification();\n\n      return;\n    }\n\n    if (!checkIsPositionValid(positionValue)) {\n      pushErrorPositionNotification();\n\n      return;\n    }\n\n    if (!checkIsAgeValid(ageValue)) {\n      pushErrorAgeNotification();\n\n      return;\n    }\n\n    if (!checkIsSalaryValid(salaryValue)) {\n      pushErrorSalaryNotification();\n\n      return;\n    }\n\n    const tr = document.createElement('tr');\n\n    tr.innerHTML = `\n      <td>${nameValue.trim()}</td>\n      <td>${positionValue.trim()}</td>\n      <td>${officeValue}</td>\n      <td>${ageValue}</td>\n      <td>${makeSalaryString(salaryValue)}</td>\n    `;\n\n    tBody.append(tr);\n\n    nameInput.value = '';\n    positionInput.value = '';\n    officeInput.value = '';\n    ageInput.value = '';\n    salaryInput.value = '';\n\n    pushNotification(\n      'Success',\n      'Your data was added to table',\n      'success'\n    );\n  });\n\n  return form;\n}\n\nfunction handleSortEvent(e) {\n  if (e.target.tagName === 'TH') {\n    const sortValue = e.target.textContent;\n    const rows = [...tBody.querySelectorAll('tr')];\n\n    if (sortState === sortValue) {\n      tBody.append(...rows.reverse());\n\n      return;\n    }\n\n    sortState = sortValue;\n\n    const index = [...e.target.parentElement.children].indexOf(e.target);\n\n    const sortedRows = rows.sort((row1, row2) => {\n      const row1Value = row1.children[index].textContent;\n      const row2Value = row2.children[index].textContent;\n\n      switch (sortValue) {\n        case 'Name':\n        case 'Position':\n        case 'Office':\n          return row1Value.localeCompare(row2Value);\n\n        case 'Age':\n        case 'Salary':\n          return getNumFromString(row1Value) - getNumFromString(row2Value);\n      }\n    });\n\n    tBody.append(...sortedRows);\n  }\n}\n\nfunction toggleActiveRow(e) {\n  const row = e.target.closest('tr');\n\n  if (activeRow === row) {\n    row.classList.toggle('active');\n\n    return;\n  }\n\n  row.classList.add('active');\n\n  if (activeRow !== '') {\n    activeRow.classList.remove('active');\n  }\n\n  activeRow = row;\n}\n\nfunction changeContentInCell(e) {\n  const cell = e.target;\n  const input = document.createElement('input');\n\n  input.classList.add('cell-input');\n\n  if ([...cell.parentElement.children].indexOf(cell) === 4) {\n    input.setAttribute('value', getNumFromString(cell.textContent));\n  } else {\n    input.setAttribute('value', cell.textContent);\n  }\n\n  function handleChangeEvent(changeEvent) {\n    if (changeEvent.type === 'blur' || changeEvent.key === 'Enter') {\n      const row = [...cell.parentElement.children];\n      const cellIndex = row.indexOf(cell);\n      const initialValue = changeEvent.target.getAttribute('value');\n      let newValue = changeEvent.target.value;\n      let hasErrors = false;\n\n      switch (cellIndex) {\n        case 0:\n          if (!checkIsNameValid(handleTextInput(newValue))) {\n            pushErrorPositionNotification();\n\n            newValue = initialValue;\n            hasErrors = true;\n          }\n\n          break;\n\n        case 1:\n          if (!checkIsPositionValid(handleTextInput(newValue))) {\n            pushErrorPositionNotification();\n\n            newValue = initialValue;\n            hasErrors = true;\n          }\n\n          break;\n\n        case 2:\n          if (!checkIsOfficeValid(newValue)) {\n            pushErrorOfficeNotification();\n\n            newValue = initialValue;\n            hasErrors = true;\n          }\n\n          break;\n\n        case 3:\n          if (!checkIsAgeValid(+newValue)) {\n            pushErrorAgeNotification();\n\n            newValue = initialValue;\n            hasErrors = true;\n          }\n\n          break;\n\n        case 4:\n          if (!checkIsSalaryValid(newValue)) {\n            pushErrorSalaryNotification();\n\n            newValue = makeSalaryString(initialValue);\n            hasErrors = true;\n          } else {\n            newValue = makeSalaryString(newValue);\n          }\n      }\n\n      cell.classList.remove('cell-input');\n      cell.textContent = newValue;\n\n      if (!hasErrors) {\n        pushNotification('Success', 'Your data was changed', 'success');\n      }\n    }\n  }\n\n  input.addEventListener('blur', handleChangeEvent);\n  input.addEventListener('keypress', handleChangeEvent);\n\n  cell.innerHTML = '';\n  cell.append(input);\n  input.focus();\n}\n\ndocument.body.append(createForm());\ntHead.addEventListener('click', handleSortEvent);\ntBody.addEventListener('click', toggleActiveRow);\ntBody.addEventListener('dblclick', changeContentInCell);\n"]}